<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="images.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>